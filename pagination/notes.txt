import { useState, useEffect } from 'react'

import './App.css'

function App() {
  const [products, setProducts]=useState([])
  const [page,setPage]=useState(1)
  const [totalPages,setTotalPages]=useState(0);
  const fetchProducts = async () => {
    const res = await fetch(`https://dummyjson.com/products?limit=100`)
    const data = await res.json()

    console.log(data);

    if (data && data.products) {
      setProducts(data.products)
      setTotalPages(data.total/10)
    }
  }

  useEffect(() => {
    fetchProducts()
  }, [])
const selectedPageHandler=(selectedPage)=>{
  if(selectedPage >= 1 && selectedPage<= products.length/10 && selectedPage !== page){
    setPage(selectedPage)
  }


}
  return (
    <div>
   
     {
     products.length > 0 && (
      <div className="products">
        {/* for making it backend drive and put more presssure on backend we can remove slice and add query params or get all the data from backend api like : `https://dummyjson.com/products?limit=10&skip=${page*10-10}` , and were we used product.length replace it by totalPages* and pass page variable in empty array or useEffect/}
      {
        products.slice(page*10-10,page*10).map((prod)=>{
          return <span className="products__single" key={prod.id}><img src={prod.thumbnail} alt={prod.title}/>
          <span>{prod.title}</span>
          </span>
        })}
      </div>     
) }
{
  products.length > 0 && <div className="products">
<span onClick={()=>selectedPageHandler(page-1)} className={page>1?"":"paginaton__disable"}>◀</span>
{
  [...Array(products.length/10)].map((_,i)=>{
    return (
      <span  onClick={()=>selectedPageHandler(i+1)}key={i}>{i+1}</span>
    )
  })
}
<span
onClick={()=>selectedPageHandler(page+1)} className={page<products.length/10 ? "":"pagination__disable"}
>▶</span>
  </div>
}

    </div>
  )
}

export default App
