React.js :
hr@codeking.in 
priyanka.deshmukh@canopusinfosystems.com
hr@saviesainfotech.com
careers@antino.com
hr@deorwine.com
kritika.sharma@advantal.net
amandeep@onv8.com
















Node.js :
careers@codeaegis.com
priyanka.deshmukh@canopusinfosystems.com
hr@deliverable.services
careers@antino.com








MERN STACK :
Prachi.p@e-solutionsinc.com
hr@controlf5.in
careers@antino.com
hr@hawkscode.com








https://www.linkedin.com/jobs/view/3879296813




1.get the data from below url
https://datausa.io/api/data?drilldowns=Nation&measures=Population
2. Display a table which should contain years and population from this api
3. Add a input where user can search year or population appy debouncing here.
4.Add a reset button which will reset the data in table to initial data.
5. Add delete option in each row which should delete respective row when clicked.


Create a react component that displays a timer with initial value 0.
2. There should be two buttons one to start/stop, and other to reset timer.
3. Clicking on start will start timer from 0 and increase timer value by 1 for every second and button text should change to "stop".
4. Clicking on stop will pause the timer and change button text to "start".
5. Now click on start then timer should continue from paused value.
6. Clicking on reset will reset the timer to initial value 0.


1. get the questions and options from the API or create your own quiz object with questions and options,answer as properties (https://lnkd.in/gSCwr_rt).
2. develop ui which shows quiz questions, answer choices, navigation buttons for 'Next' and 'Previous,' and a 'Submit' button.
3. On the right, display the quiz progress with circular indicators and quiz question numbers.
a) initially circle should be with no color.
b) If user visits question and selects any option, change color to green,
c) If user visits question and unanswered,then change color to red



Implement a todo list component in React. User can add, mark todos as completed & filter todos
1. Each todo object should have a text property and a completed property.
2. Display the list of todos.Each todo should be displayed as a checkbox with the todo text as its label. The checkbox should be checked if the todo is completed.
3. The component has a input field and a button for adding new todos. When the button clicked, a new todo should be added to the list with the input fied's value as its text and completed set to false.
4. When checkbox is clicked, the completed property of that todo should be toggled.
5. The component should have buttons . There should be three filters. "ALL","ACTIVE","COMPLETED". "ALL" should show all the todos,


1. Implement nested checkboxes in parent-child relationship.
2. When a parent checkbox is checked, all its children checkboxes should also be checked.
3. When a parent checkbox is unchecked, all its children checkboxes should also be unchecked.
4. If all children checkboxes are checked, the parent checkbox should be checked.
5. If any child checkbox is unchecked, the parent checkbox should be unchecked.



1. create two mock api's using promises. which return a list of students. Each student object should have a name, marks, and a unique registration id.
2. merge the data from both api's and remove duplicates
3. render the student data in box1 with checkboxes. 
4. allow the selection of multiple students simultaneously.
5. move selected students to box2 by clicking right arrow and viceversa for left arrow.


